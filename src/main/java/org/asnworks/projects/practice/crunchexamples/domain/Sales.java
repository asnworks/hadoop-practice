/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.asnworks.projects.practice.crunchexamples.domain;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Sales extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Sales\",\"namespace\":\"org.asnworks.projects.practice.crunchexamples.domain\",\"fields\":[{\"name\":\"transactionDate\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"productId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"price\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"paymentType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"city\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"state\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"country\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"accountCreated\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"lastLogin\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"latitude\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"longitude\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String transactionDate;
  @Deprecated public java.lang.String productId;
  @Deprecated public java.lang.String price;
  @Deprecated public java.lang.String paymentType;
  @Deprecated public java.lang.String name;
  @Deprecated public java.lang.String city;
  @Deprecated public java.lang.String state;
  @Deprecated public java.lang.String country;
  @Deprecated public java.lang.String accountCreated;
  @Deprecated public java.lang.String lastLogin;
  @Deprecated public java.lang.String latitude;
  @Deprecated public java.lang.String longitude;

  /**
   * Default constructor.
   */
  public Sales() {}

  /**
   * All-args constructor.
   */
  public Sales(java.lang.String transactionDate, java.lang.String productId, java.lang.String price, java.lang.String paymentType, java.lang.String name, java.lang.String city, java.lang.String state, java.lang.String country, java.lang.String accountCreated, java.lang.String lastLogin, java.lang.String latitude, java.lang.String longitude) {
    this.transactionDate = transactionDate;
    this.productId = productId;
    this.price = price;
    this.paymentType = paymentType;
    this.name = name;
    this.city = city;
    this.state = state;
    this.country = country;
    this.accountCreated = accountCreated;
    this.lastLogin = lastLogin;
    this.latitude = latitude;
    this.longitude = longitude;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return transactionDate;
    case 1: return productId;
    case 2: return price;
    case 3: return paymentType;
    case 4: return name;
    case 5: return city;
    case 6: return state;
    case 7: return country;
    case 8: return accountCreated;
    case 9: return lastLogin;
    case 10: return latitude;
    case 11: return longitude;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: transactionDate = (java.lang.String)value$; break;
    case 1: productId = (java.lang.String)value$; break;
    case 2: price = (java.lang.String)value$; break;
    case 3: paymentType = (java.lang.String)value$; break;
    case 4: name = (java.lang.String)value$; break;
    case 5: city = (java.lang.String)value$; break;
    case 6: state = (java.lang.String)value$; break;
    case 7: country = (java.lang.String)value$; break;
    case 8: accountCreated = (java.lang.String)value$; break;
    case 9: lastLogin = (java.lang.String)value$; break;
    case 10: latitude = (java.lang.String)value$; break;
    case 11: longitude = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'transactionDate' field.
   */
  public java.lang.String getTransactionDate() {
    return transactionDate;
  }

  /**
   * Sets the value of the 'transactionDate' field.
   * @param value the value to set.
   */
  public void setTransactionDate(java.lang.String value) {
    this.transactionDate = value;
  }

  /**
   * Gets the value of the 'productId' field.
   */
  public java.lang.String getProductId() {
    return productId;
  }

  /**
   * Sets the value of the 'productId' field.
   * @param value the value to set.
   */
  public void setProductId(java.lang.String value) {
    this.productId = value;
  }

  /**
   * Gets the value of the 'price' field.
   */
  public java.lang.String getPrice() {
    return price;
  }

  /**
   * Sets the value of the 'price' field.
   * @param value the value to set.
   */
  public void setPrice(java.lang.String value) {
    this.price = value;
  }

  /**
   * Gets the value of the 'paymentType' field.
   */
  public java.lang.String getPaymentType() {
    return paymentType;
  }

  /**
   * Sets the value of the 'paymentType' field.
   * @param value the value to set.
   */
  public void setPaymentType(java.lang.String value) {
    this.paymentType = value;
  }

  /**
   * Gets the value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'city' field.
   */
  public java.lang.String getCity() {
    return city;
  }

  /**
   * Sets the value of the 'city' field.
   * @param value the value to set.
   */
  public void setCity(java.lang.String value) {
    this.city = value;
  }

  /**
   * Gets the value of the 'state' field.
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Sets the value of the 'state' field.
   * @param value the value to set.
   */
  public void setState(java.lang.String value) {
    this.state = value;
  }

  /**
   * Gets the value of the 'country' field.
   */
  public java.lang.String getCountry() {
    return country;
  }

  /**
   * Sets the value of the 'country' field.
   * @param value the value to set.
   */
  public void setCountry(java.lang.String value) {
    this.country = value;
  }

  /**
   * Gets the value of the 'accountCreated' field.
   */
  public java.lang.String getAccountCreated() {
    return accountCreated;
  }

  /**
   * Sets the value of the 'accountCreated' field.
   * @param value the value to set.
   */
  public void setAccountCreated(java.lang.String value) {
    this.accountCreated = value;
  }

  /**
   * Gets the value of the 'lastLogin' field.
   */
  public java.lang.String getLastLogin() {
    return lastLogin;
  }

  /**
   * Sets the value of the 'lastLogin' field.
   * @param value the value to set.
   */
  public void setLastLogin(java.lang.String value) {
    this.lastLogin = value;
  }

  /**
   * Gets the value of the 'latitude' field.
   */
  public java.lang.String getLatitude() {
    return latitude;
  }

  /**
   * Sets the value of the 'latitude' field.
   * @param value the value to set.
   */
  public void setLatitude(java.lang.String value) {
    this.latitude = value;
  }

  /**
   * Gets the value of the 'longitude' field.
   */
  public java.lang.String getLongitude() {
    return longitude;
  }

  /**
   * Sets the value of the 'longitude' field.
   * @param value the value to set.
   */
  public void setLongitude(java.lang.String value) {
    this.longitude = value;
  }

  /** Creates a new Sales RecordBuilder */
  public static org.asnworks.projects.practice.crunchexamples.domain.Sales.Builder newBuilder() {
    return new org.asnworks.projects.practice.crunchexamples.domain.Sales.Builder();
  }
  
  /** Creates a new Sales RecordBuilder by copying an existing Builder */
  public static org.asnworks.projects.practice.crunchexamples.domain.Sales.Builder newBuilder(org.asnworks.projects.practice.crunchexamples.domain.Sales.Builder other) {
    return new org.asnworks.projects.practice.crunchexamples.domain.Sales.Builder(other);
  }
  
  /** Creates a new Sales RecordBuilder by copying an existing Sales instance */
  public static org.asnworks.projects.practice.crunchexamples.domain.Sales.Builder newBuilder(org.asnworks.projects.practice.crunchexamples.domain.Sales other) {
    return new org.asnworks.projects.practice.crunchexamples.domain.Sales.Builder(other);
  }
  
  /**
   * RecordBuilder for Sales instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Sales>
    implements org.apache.avro.data.RecordBuilder<Sales> {

    private java.lang.String transactionDate;
    private java.lang.String productId;
    private java.lang.String price;
    private java.lang.String paymentType;
    private java.lang.String name;
    private java.lang.String city;
    private java.lang.String state;
    private java.lang.String country;
    private java.lang.String accountCreated;
    private java.lang.String lastLogin;
    private java.lang.String latitude;
    private java.lang.String longitude;

    /** Creates a new Builder */
    private Builder() {
      super(org.asnworks.projects.practice.crunchexamples.domain.Sales.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.asnworks.projects.practice.crunchexamples.domain.Sales.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing Sales instance */
    private Builder(org.asnworks.projects.practice.crunchexamples.domain.Sales other) {
            super(org.asnworks.projects.practice.crunchexamples.domain.Sales.SCHEMA$);
      if (isValidValue(fields()[0], other.transactionDate)) {
        this.transactionDate = data().deepCopy(fields()[0].schema(), other.transactionDate);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.productId)) {
        this.productId = data().deepCopy(fields()[1].schema(), other.productId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.price)) {
        this.price = data().deepCopy(fields()[2].schema(), other.price);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.paymentType)) {
        this.paymentType = data().deepCopy(fields()[3].schema(), other.paymentType);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.name)) {
        this.name = data().deepCopy(fields()[4].schema(), other.name);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.city)) {
        this.city = data().deepCopy(fields()[5].schema(), other.city);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.state)) {
        this.state = data().deepCopy(fields()[6].schema(), other.state);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.country)) {
        this.country = data().deepCopy(fields()[7].schema(), other.country);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.accountCreated)) {
        this.accountCreated = data().deepCopy(fields()[8].schema(), other.accountCreated);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.lastLogin)) {
        this.lastLogin = data().deepCopy(fields()[9].schema(), other.lastLogin);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.latitude)) {
        this.latitude = data().deepCopy(fields()[10].schema(), other.latitude);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.longitude)) {
        this.longitude = data().deepCopy(fields()[11].schema(), other.longitude);
        fieldSetFlags()[11] = true;
      }
    }

    /** Gets the value of the 'transactionDate' field */
    public java.lang.String getTransactionDate() {
      return transactionDate;
    }
    
    /** Sets the value of the 'transactionDate' field */
    public org.asnworks.projects.practice.crunchexamples.domain.Sales.Builder setTransactionDate(java.lang.String value) {
      validate(fields()[0], value);
      this.transactionDate = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'transactionDate' field has been set */
    public boolean hasTransactionDate() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'transactionDate' field */
    public org.asnworks.projects.practice.crunchexamples.domain.Sales.Builder clearTransactionDate() {
      transactionDate = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'productId' field */
    public java.lang.String getProductId() {
      return productId;
    }
    
    /** Sets the value of the 'productId' field */
    public org.asnworks.projects.practice.crunchexamples.domain.Sales.Builder setProductId(java.lang.String value) {
      validate(fields()[1], value);
      this.productId = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'productId' field has been set */
    public boolean hasProductId() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'productId' field */
    public org.asnworks.projects.practice.crunchexamples.domain.Sales.Builder clearProductId() {
      productId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'price' field */
    public java.lang.String getPrice() {
      return price;
    }
    
    /** Sets the value of the 'price' field */
    public org.asnworks.projects.practice.crunchexamples.domain.Sales.Builder setPrice(java.lang.String value) {
      validate(fields()[2], value);
      this.price = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'price' field has been set */
    public boolean hasPrice() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'price' field */
    public org.asnworks.projects.practice.crunchexamples.domain.Sales.Builder clearPrice() {
      price = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'paymentType' field */
    public java.lang.String getPaymentType() {
      return paymentType;
    }
    
    /** Sets the value of the 'paymentType' field */
    public org.asnworks.projects.practice.crunchexamples.domain.Sales.Builder setPaymentType(java.lang.String value) {
      validate(fields()[3], value);
      this.paymentType = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'paymentType' field has been set */
    public boolean hasPaymentType() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'paymentType' field */
    public org.asnworks.projects.practice.crunchexamples.domain.Sales.Builder clearPaymentType() {
      paymentType = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'name' field */
    public java.lang.String getName() {
      return name;
    }
    
    /** Sets the value of the 'name' field */
    public org.asnworks.projects.practice.crunchexamples.domain.Sales.Builder setName(java.lang.String value) {
      validate(fields()[4], value);
      this.name = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'name' field has been set */
    public boolean hasName() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'name' field */
    public org.asnworks.projects.practice.crunchexamples.domain.Sales.Builder clearName() {
      name = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'city' field */
    public java.lang.String getCity() {
      return city;
    }
    
    /** Sets the value of the 'city' field */
    public org.asnworks.projects.practice.crunchexamples.domain.Sales.Builder setCity(java.lang.String value) {
      validate(fields()[5], value);
      this.city = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'city' field has been set */
    public boolean hasCity() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'city' field */
    public org.asnworks.projects.practice.crunchexamples.domain.Sales.Builder clearCity() {
      city = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'state' field */
    public java.lang.String getState() {
      return state;
    }
    
    /** Sets the value of the 'state' field */
    public org.asnworks.projects.practice.crunchexamples.domain.Sales.Builder setState(java.lang.String value) {
      validate(fields()[6], value);
      this.state = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'state' field has been set */
    public boolean hasState() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'state' field */
    public org.asnworks.projects.practice.crunchexamples.domain.Sales.Builder clearState() {
      state = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'country' field */
    public java.lang.String getCountry() {
      return country;
    }
    
    /** Sets the value of the 'country' field */
    public org.asnworks.projects.practice.crunchexamples.domain.Sales.Builder setCountry(java.lang.String value) {
      validate(fields()[7], value);
      this.country = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'country' field has been set */
    public boolean hasCountry() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'country' field */
    public org.asnworks.projects.practice.crunchexamples.domain.Sales.Builder clearCountry() {
      country = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'accountCreated' field */
    public java.lang.String getAccountCreated() {
      return accountCreated;
    }
    
    /** Sets the value of the 'accountCreated' field */
    public org.asnworks.projects.practice.crunchexamples.domain.Sales.Builder setAccountCreated(java.lang.String value) {
      validate(fields()[8], value);
      this.accountCreated = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'accountCreated' field has been set */
    public boolean hasAccountCreated() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'accountCreated' field */
    public org.asnworks.projects.practice.crunchexamples.domain.Sales.Builder clearAccountCreated() {
      accountCreated = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'lastLogin' field */
    public java.lang.String getLastLogin() {
      return lastLogin;
    }
    
    /** Sets the value of the 'lastLogin' field */
    public org.asnworks.projects.practice.crunchexamples.domain.Sales.Builder setLastLogin(java.lang.String value) {
      validate(fields()[9], value);
      this.lastLogin = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'lastLogin' field has been set */
    public boolean hasLastLogin() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'lastLogin' field */
    public org.asnworks.projects.practice.crunchexamples.domain.Sales.Builder clearLastLogin() {
      lastLogin = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'latitude' field */
    public java.lang.String getLatitude() {
      return latitude;
    }
    
    /** Sets the value of the 'latitude' field */
    public org.asnworks.projects.practice.crunchexamples.domain.Sales.Builder setLatitude(java.lang.String value) {
      validate(fields()[10], value);
      this.latitude = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'latitude' field has been set */
    public boolean hasLatitude() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'latitude' field */
    public org.asnworks.projects.practice.crunchexamples.domain.Sales.Builder clearLatitude() {
      latitude = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'longitude' field */
    public java.lang.String getLongitude() {
      return longitude;
    }
    
    /** Sets the value of the 'longitude' field */
    public org.asnworks.projects.practice.crunchexamples.domain.Sales.Builder setLongitude(java.lang.String value) {
      validate(fields()[11], value);
      this.longitude = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'longitude' field has been set */
    public boolean hasLongitude() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'longitude' field */
    public org.asnworks.projects.practice.crunchexamples.domain.Sales.Builder clearLongitude() {
      longitude = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    @Override
    public Sales build() {
      try {
        Sales record = new Sales();
        record.transactionDate = fieldSetFlags()[0] ? this.transactionDate : (java.lang.String) defaultValue(fields()[0]);
        record.productId = fieldSetFlags()[1] ? this.productId : (java.lang.String) defaultValue(fields()[1]);
        record.price = fieldSetFlags()[2] ? this.price : (java.lang.String) defaultValue(fields()[2]);
        record.paymentType = fieldSetFlags()[3] ? this.paymentType : (java.lang.String) defaultValue(fields()[3]);
        record.name = fieldSetFlags()[4] ? this.name : (java.lang.String) defaultValue(fields()[4]);
        record.city = fieldSetFlags()[5] ? this.city : (java.lang.String) defaultValue(fields()[5]);
        record.state = fieldSetFlags()[6] ? this.state : (java.lang.String) defaultValue(fields()[6]);
        record.country = fieldSetFlags()[7] ? this.country : (java.lang.String) defaultValue(fields()[7]);
        record.accountCreated = fieldSetFlags()[8] ? this.accountCreated : (java.lang.String) defaultValue(fields()[8]);
        record.lastLogin = fieldSetFlags()[9] ? this.lastLogin : (java.lang.String) defaultValue(fields()[9]);
        record.latitude = fieldSetFlags()[10] ? this.latitude : (java.lang.String) defaultValue(fields()[10]);
        record.longitude = fieldSetFlags()[11] ? this.longitude : (java.lang.String) defaultValue(fields()[11]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
